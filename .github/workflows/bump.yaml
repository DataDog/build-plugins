name: Bump the versions
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'What to bump?'
        required: true
        default: 'patch'
        type: choice
        options:
        - 'patch'
        - 'minor'
        - 'major'


jobs:
  bump:
    permissions:
      id-token: write # Needed to federate tokens.
    runs-on: ubuntu-latest
    steps:
    - uses: DataDog/dd-octo-sts-action@acaa02eee7e3bb0839e4272dacb37b8f3b58ba80
      id: octo-sts
      with:
        scope: DataDog/build-plugins
        audience: dd-octo-sts
        policy: self.bump
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for "yarn version" to work.
        token: ${{ steps.octo-sts.outputs.token }}
    - uses: actions/setup-node@v4
      with:
        node-version-file: 'package.json'

    - run: yarn install
    - run: yarn version:all ${{ inputs.version }}
    - run: git add .
    - run: |
        TAG_NAME="v$(yarn info @datadog/build-plugins --json | jq -r '.children.Version')"
        echo "Tag name: $TAG_NAME"

        # Set the git user.
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'

        BRANCH_NAME="bump-version-$TAG_NAME"

        echo "Checking out branch $BRANCH_NAME..."
        git checkout -b $BRANCH_NAME

        echo "Committing..."
        git commit -m $TAG_NAME
        echo "Tagging..."
        git tag -a $TAG_NAME -m $TAG_NAME
        echo "Pushing..."
        # "--atomic" is needed to push the tag and the branch at the same time.
        git push --atomic origin $BRANCH_NAME $TAG_NAME

        echo "Creating PR..."
        gh pr create \
          --title "Bump version to $TAG_NAME" \
          --body "This PR bumps the package versions to \`$TAG_NAME\`" \
          --base master \
          --head $BRANCH_NAME
      env:
          GITHUB_TOKEN: ${{ steps.octo-sts.outputs.token }}
    - name: Log bump
      run: |
        VERSION="$(yarn workspace @datadog/webpack-plugin info @datadog/webpack-plugin --json | jq -r '.children.Version')"
        HEADERS=(
          -H "Content-Type: application/json"
          -H "X-Datadog-Origin: build-plugins"
          -H "DD-API-KEY: $DATADOG_API_KEY"
        )
        DATA="{
          \"ddsource\": \"github\",
          \"service\": \"build-plugins\",
          \"message\": \"Version bumped: $VERSION\",
          \"status\": \"success\",
          \"env\": \"production\",
          \"team\": \"language-foundations\",
          \"version\": \"$VERSION\"
        }"
        URL="https://http-intake.logs.datadoghq.com/api/v2/logs"
        curl -X POST "${HEADERS[@]}" -d "$DATA" "$URL"
      env:
        DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
